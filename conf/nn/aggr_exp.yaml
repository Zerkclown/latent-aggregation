dataset_name: cifar100 # cifar100 or tiny_imagenet
output_path: ${oc.env:PROJECT_ROOT}/data/${nn.dataset_name}/embedded/

data:
  _target_: la.data.aggr_exp_datamodule.MyDataModule
  data_path: ${oc.env:PROJECT_ROOT}/data/cifar100_tasks

  datasets:
    train:
      _target_: la.data.aggr_exp_dataset.MyDataset
      samples: ???
      split: ???

    val:
      _target_: la.data.aggr_exp_dataset.MyDataset
      samples: ???
      split: ???

  gpus: ${train.trainer.gpus}

  num_workers:
    train: 16
    val: 8
    test: 8

  batch_size:
    train: 128
    val: 128
    test: 128

  val_percentage: 0.1

module:
  _target_: la.pl_modules.pl_module.MyLightningModule

  model:
    _target_: la.modules.efficient_net.MyEfficientNet # la.modules.vanilla_cnn.CNN, la.modules.efficient_net.MyEfficientNet
    pre_head_dim: 128

  optimizer:
    _target_: torch.optim.Adam

#  lr_scheduler:
#    _target_: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts
#    T_0: 10
#    T_mult: 2
#    eta_min: 0
#    last_epoch: -1
#    verbose: False

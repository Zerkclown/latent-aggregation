_target_: la.pl_modules.efficient_net.MyEfficientNet
name: efficient_net
input_dim: ???

model:
  embedder:
    _target_: la.modules.efficient_net.EfficientNetWrapper
    model_name: efficientnet_b0

  projector:
    _target_: la.modules.mlp_projector.VanillaMLPProjector
    num_input_features: 1280
    hidden_dim: 256
    projection_dim: 128

  classifier:
    _target_: torch.nn.Linear
    in_features: ${nn.model.model.projector.projection_dim}
    out_features: ???

optimizer:
  _target_: torch.optim.Adam

transform_func:
  _target_: torchvision.transforms.Compose
  transforms:
    - _target_: torchvision.transforms.Resize
      size: 256
    - _target_: torchvision.transforms.CenterCrop
      size: [224, 224]
    - _target_: torchvision.transforms.ToTensor
    - _target_: torchvision.transforms.Normalize
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]

# reproducibility
seed_index: 0
deterministic: False

trainer:
  fast_dev_run: False
  gpus: 1
  precision: 32
  max_epochs: 250 # 250
  accumulate_grad_batches: 1
  num_sanity_val_steps: 2
  gradient_clip_val: 10.0
  val_check_interval: 1.0
  check_val_every_n_epoch: 1
  deterministic: ${train.deterministic}

restore:
  ckpt_or_run_path: null
  mode: null # null, finetune, hotstart, continue

monitor:
  metric: 'loss/val'
  mode: 'min'

callbacks:
  - _target_: pytorch_lightning.callbacks.EarlyStopping
    patience: 5 # it actually means K * n, where K is the patience and n is from check_val_every_n_epochs
    verbose: False
    monitor: ${train.monitor.metric}
    mode: ${train.monitor.mode}

  - _target_: pytorch_lightning.callbacks.ModelCheckpoint
    save_top_k: 1
    verbose: False
    monitor: ${train.monitor.metric}
    mode: ${train.monitor.mode}

  - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    logging_interval: "step"
    log_momentum: False

  - _target_: pytorch_lightning.callbacks.progress.tqdm_progress.TQDMProgressBar
    refresh_rate: 1000

logging:
  upload:
    run_files: true
    source: true

  logger:
    _target_: pytorch_lightning.loggers.WandbLogger

    project: ${core.project_name}
    entity: null
    log_model: ${..upload.run_files}
    mode: 'online'
    tags: ${core.tags}

#  wandb_watch:
#    log: 'all'
#    log_freq: 100
